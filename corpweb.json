{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "InstanceType": {
            "Description": "EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t2.small"
            ],
            "ConstraintDescription": "Must be a valid EC2 type."
        },
        "KeyPair": {
            "Description": "Name of your EC2 keypair to enable SSH access",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "Must be the name of an existing KeyPair"
        },
        "YourIP": {
            "Description": "The current IP address of your workstation (x.x.x.x/32)",
            "Type": "String"
        }
    },
    "Resources": {
        "EngineeringVpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "CidrBlock": "10.0.0.0/18",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "EngineeringVpc"
                    }
                ]
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "EngineeringVpc"
                },
                "MapPublicIpOnLaunch": "true",
                "CidrBlock": "10.0.0.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public-Subnet1"
                    }
                ]
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "EngineeringVpc"
                },
                "MapPublicIpOnLaunch": "true",
                "CidrBlock": "10.0.1.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public-Subnet2"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {}
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "EngineeringVpc"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "EngineeringVpc"
                }
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            },
            "DependsOn": [
                "InternetGateway"
            ]
        },
        "PublicSubnet1RTassoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            }
        },
        "PublicSubnet2RTassoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            }
        },
        "WebserverSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupName": "WebserverSG",
                "GroupDescription": "Security group rules for webserver host.",
                "VpcId": {
                    "Ref": "EngineeringVpc"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "YourIP"
                        }
                    }
                ]
            }
        },
        "Web1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "ImageId": "ami-01cc34ab2709337aa",
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "WebserverSG"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web1"
                    }
                ],
                "UserData": {
                    "Fn::Base64": "#!/bin/bash\nyum update -y\nyum insatall -y git httpd php\nservice httpd start\naws s3 cp s3://seis665-public/index.php /var/www/html/"
                }
            }
        },
        "Web2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "ImageId": "ami-01cc34ab2709337aa",
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "WebserverSG"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web2"
                    }
                ],
                "UserData": {
                    "Fn::Base64": "#!/bin/bash\nyum update -y\nyum insatall -y git httpd php\nservice httpd start\naws s3 cp s3://seis665-public/index.php /var/www/html/"
                }
            }
        },
        "EnineeringLB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Subnets": [
                    {
                        "Ref": "PublicSubnet1"
                    },
                    {
                        "Ref": "PublicSubnet2"
                    }
                ],
                "SecurityGroups": [
                    {
                        "Ref": "WebserverSG"
                    }
                ]
            }
        },
        "EnineeringWebserver": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "Protocol": "HTTP",
                "Port": 80,
                "VpcId": {
                    "Ref": "EngineeringVpc"
                },
                "TargetType": "instance"
            }
        },
        "LoadBalancerListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "EnineeringWebserver"
                        }
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "EnineeringLB"
                },
                "Protocol": "HTTP",
                "Port": 80
            }
        }
    },
    "Outputs": {
        "weburl": {
            "Value": {
                "Fn::GetAtt": [
                    "EnineeringLB",
                    "DNSName"
                ]
            },
            "Description": "The load balancer dns name"
        }
    }
}